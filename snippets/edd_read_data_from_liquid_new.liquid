{%  assign shipping_method_meta = product.metafields.custom.shipping_method %}
<script>
var shipping_method_meta =`{{ shipping_method_meta }}`;
  console.log('shipping_method_meta')
  console.log(shipping_method_meta)
</script>
{% comment %}
{{ "edd_specific_product_msg.js" | asset_url | script_tag }}
{{ "edd_collection_msg.js" | asset_url | script_tag }}
{{ "edd_product_tag_msg.js" | asset_url | script_tag }}
{{ "edd_product_vendor_msg.js" | asset_url | script_tag }}
{{ "edd_all_product_msg.js" | asset_url | script_tag }}
{{ "edd_exclude_product.js" | asset_url | script_tag }}
{{ "edd_general_settings.js" | asset_url | script_tag }}
{% endcomment %}

  {% if template contains 'product'  %}

   {% assign sb_edd_Settings = shop.metafields.deliveryEstimation.Settings | json %}
{% assign sb_edd_all_product_msg = shop.metafields.deliveryEstimation.edd_all_product_msg | json  %}
{% assign sb_edd_collection_msg = shop.metafields.deliveryEstimation.edd_collection_msg | json %}
{% assign sb_edd_specific_product_msg = shop.metafields.deliveryEstimation.edd_specific_product_msg | json  %}
{% assign sb_edd_product_tag_msg = shop.metafields.deliveryEstimation.edd_product_tag_msg | json  %}
{% assign sb_edd_product_vendor_msg = shop.metafields.deliveryEstimation.edd_product_vendor_msg | json  %}
  
<script>
  var edd_general_data = {{ sb_edd_Settings  }};
  var edd_plan_info = edd_general_data.plan_info;
  var edd_options = edd_general_data.edd_options;
  var edd_all_product_msg = {{ sb_edd_all_product_msg  }}
  var edd_collection_msg = {{ sb_edd_collection_msg  }}
  var edd_specific_product_msg = {{ sb_edd_specific_product_msg  }}
  var edd_product_tag_msg = {{ sb_edd_product_tag_msg  }}
  var edd_product_vendor_msg = {{ sb_edd_product_vendor_msg  }}
  var edd_exclude_product = edd_general_data.edd_exclude_product  
  console.log(edd_general_data)
  console.log(edd_options)
  console.log(edd_all_product_msg)
  console.log(edd_collection_msg)
  console.log(edd_specific_product_msg)
  console.log(edd_product_tag_msg)
  console.log(edd_product_vendor_msg)
  console.log(edd_exclude_product)
</script>
<!-- get collection --> 
{% assign collection_id = 'not_set' %}
{% assign pro_collection = product.collections.first %}
{% if pro_collection %}
{% assign collection_id = product.collections.first.id  %}
{% endif %}


{% assign product_id = product.id  %}
{% assign product_title = product.title  %}
{% assign product_handle = product.handle  %}
{% assign product_tag = product.tags  %}
{% assign product_type = product.type || replace:'`',''  %}
{% assign product_vendor = product.vendor  %}
{% assign product_avaiable = product.available  %}


    
{% assign product_weight = product.variants[0].weight  %}
{% assign collection = collection_id %}
{% assign tagCount = 0 %}
{% assign collectionCount = 0 %}

{% assign product_qty = 0 %}
{% for variant in product.variants %}
{% if variant.inventory_quantity > 0 %}
{% assign product_qty = product_qty | plus: variant.inventory_quantity %}
{% endif %}
{% endfor %}

<div class='sb_info metafield_update' style='display:none'>
<div class='sb_store_date'>{{ "now" | date: "%b %d, %Y %H:%M" }}</div>
<div >Product Tag : {% for getproduct_tag in product.tags %}
    <div> {{tagCount}} : 
    <span class='edd_product_tag product_tag_{{tagCount}}'>{{getproduct_tag}}</span> 
    {% assign tagCount = tagCount | plus: 1 %}  
    </div>{% endfor %}
</div>
<div >Product Collection : {% for getCollection in  product.collections %}
    <div> {{collectionCount}} : 
    <span class='edd_product_collection product_collection_{{collectionCount}}'>{{getCollection.id}}</span> 
    {% assign collectionCount = collectionCount | plus: 1 %}  
    </div>
{% endfor %}
</div>
</div>
{% endif %}

{%- assign templateBase = template  -%}
{% assign edd_is_homepage = '0' %}
{%- if templateBase == 'index' -%}
  {% assign edd_is_homepage = '1' %}
{% endif %}

<script>

  var edd_is_homepage = `{{ edd_is_homepage }}`;

  if(edd_is_homepage == '1' ){
   
    
    
  }else{

    var edd_product_id = `{{ product_id }}`;
    var edd_product_title = `{{ product_title }}`;
    var edd_product_handle = `{{ product_handle }}`;
    var edd_product_type = `{{ product_type }}`;
    var edd_product_vendor = `{{ product_vendor }}`;
    var edd_check_collection_id = `{{ collection_id }}`;
    var edd_product_qty = `{{ product_qty }}`;
    var edd_product_weight = `{{ product_weight }}`;
    var product_avaiable = `{{ product_avaiable }}`;
    var edd_product_tag = new Array();
    var edd_collection_id = new Array();
    var set_vaction_msg =0;
    
      for (i = 0; i < document.getElementsByClassName("edd_product_tag").length; i++) {
          edd_product_tag.push(document.querySelector(".product_tag_"+i).innerText);
      }

      
      for (i = 0; i < document.getElementsByClassName("edd_product_collection").length; i++) {
          edd_collection_id.push(document.querySelector(".product_collection_"+i).innerText);
      }
      
  }
  
  var edd_zipcode_enable = '0';
  var edd_zipcode_list = 'not_set';
  
  var product_have_qty = 0;
  var edd_message = 'not_set';
  var edd_preview_design = 'not_set';
  var set_specific_msg = 0;
  var set_shipping_method = 0;
  var is_exclude_product = '0';
  var edd_data;
  var edd_store_country,edd_store_country_code ,edd_user_country ,edd_user_country_code,edd_app_plan,edd_country_name,edd_country_code,edd_store_id;
  //var edd_shop = delivery_shop = Shopify.shop;
  if(typeof delivery_shop !== 'undefined'){
        edd_shop = delivery_shop;          
      }else{           
        edd_shop = Shopify.shop;
      } 

  var is_set_msg_for_product = '0';
  var is_set_msg_for_product_type = '0';
  var is_set_msg_for_product_tag = '0';
  var is_set_msg_for_product_vendor = '0';
  var is_set_msg_for_all_product = '0';
  var is_set_msg_for_collection = '0';
  
function setEDDCookie(cname, cvalue){
      const d = new Date();
      d.setTime(d.getTime() + (24 * 60 * 60 * 1000));
      let expires = "expires="+d.toUTCString();
      document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
}
function getEDDCookie(cname){
//console.log('***** get EDD cookie')
      let name = cname + "=";
	let decodedCookie = document.cookie;
      //let decodedCookie = decodeURIComponent(document.cookie);
      let ca = decodedCookie.split(';');
      for(let i = 0; i <ca.length; i++) {
        let c = ca[i];
        while (c.charAt(0) == ' ') {
          c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
          return c.substring(name.length, c.length);
        }
      }
      return "";
    }
  
function checkEDDCookie($){
        var check_edd_data = getEDDCookie("edd_data");
         user_country_code = Shopify.country;
        if(typeof edd_options.store_country_code != 'undefined' && edd_options.store_country_code != null ){
          store_country_code = edd_options.store_country_code;
        }else{
          store_country_code = user_country_code;
        }
        setCoockieForCountryMsg(store_country_code,user_country_code);
        // if (check_edd_data != ""){
        //   check_edd_data = JSON.parse(check_edd_data);
        //   //console.log('=> Cokkie set ')
        //   setEDDCountry(check_edd_data)
  
        // }else {
        //   //useedd_datarname = prompt("Please enter your name:", "");
        //     checkUserCountry($);
        //     //console.log('=> cookie not set');  
        // }
}


function setCoockieForCountryMsg(store_country_code,user_country_code){
  sb_countries = [{country: 'All Country', code: 'all_country'}, {country: 'Afghanistan', code: 'AF'}, {country: 'land Islands', code: 'AX'}, {country: 'Albania', code: 'AL'}, {country: 'Algeria', code: 'DZ'}, {country: 'American Samoa', code: 'AS'}, {country: 'AndorrA', code: 'AD'}, {country: 'Angola', code: 'AO'}, {country: 'Anguilla', code: 'AI'}, {country: 'Antarctica', code: 'AQ'}, {country: 'Antigua and Barbuda', code: 'AG'}, {country: 'Argentina', code: 'AR'}, {country: 'Armenia', code: 'AM'}, {country: 'Aruba', code: 'AW'}, {country: 'Australia', code: 'AU'}, {country: 'Austria', code: 'AT'}, {country: 'Azerbaijan', code: 'AZ'}, {country: 'Bahamas', code: 'BS'}, {country: 'Bahrain', code: 'BH'}, {country: 'Bangladesh', code: 'BD'}, {country: 'Barbados', code: 'BB'}, {country: 'Belarus', code: 'BY'}, {country: 'Belgium', code: 'BE'}, {country: 'Belize', code: 'BZ'}, {country: 'Benin', code: 'BJ'}, {country: 'Bermuda', code: 'BM'}, {country: 'Bhutan', code: 'BT'}, {country: 'Bolivia', code: 'BO'}, {country: 'Bosnia And Herzegovina', code: 'BA'}, {country: 'Botswana', code: 'BW'}, {country: 'Bouvet Island', code: 'BV'}, {country: 'Brazil', code: 'BR'}, {country: 'British Indian Ocean Territory', code: 'IO'}, {country: 'Brunei Darussalam', code: 'BN'}, {country: 'Saint Barthelemy', code: 'BL'}, {country: 'Bulgaria', code: 'BG'}, {country: 'Burkina Faso', code: 'BF'}, {country: 'Burundi', code: 'BI'}, {country: 'Cambodia', code: 'KH'}, {country: 'Cameroon', code: 'CM'}, {country: 'Canada', code: 'CA'}, {country: 'Cape Verde', code: 'CV'}, {country: 'Cayman Islands', code: 'KY'}, {country: 'Central African Republic', code: 'CF'}, {country: 'Chad', code: 'TD'}, {country: 'Chile', code: 'CL'}, {country: 'China', code: 'CN'}, {country: 'Christmas Island', code: 'CX'}, {country: 'Cocos (Keeling) Islands', code: 'CC'}, {country: 'Colombia', code: 'CO'}, {country: 'Comoros', code: 'KM'}, {country: 'Congo', code: 'CG'}, {country: 'Congo, The Democratic Republic of the', code: 'CD'}, {country: 'Cook Islands', code: 'CK'}, {country: 'Costa Rica', code: 'CR'}, {country: 'Cote D"Ivoire', code: 'CI'}, {country: 'Croatia', code: 'HR'}, {country: 'Cuba', code: 'CU'}, {country: 'Cyprus', code: 'CY'}, {country: 'Czech Republic', code: 'CZ'}, {country: 'Denmark', code: 'DK'}, {country: 'Djibouti', code: 'DJ'}, {country: 'Dominica', code: 'DM'}, {country: 'Dominican Republic', code: 'DO'}, {country: 'Ecuador', code: 'EC'}, {country: 'Egypt', code: 'EG'}, {country: 'El Salvador', code: 'SV'}, {country: 'Equatorial Guinea', code: 'GQ'}, {country: 'Eritrea', code: 'ER'}, {country: 'Estonia', code: 'EE'}, {country: 'Ethiopia', code: 'ET'}, {country: 'Falkland Islands (Malvinas)', code: 'FK'}, {country: 'Faroe Islands', code: 'FO'}, {country: 'Fiji', code: 'FJ'}, {country: 'Finland', code: 'FI'}, {country: 'France', code: 'FR'}, {country: 'French Guiana', code: 'GF'}, {country: 'French Polynesia', code: 'PF'}, {country: 'French Southern Territories', code: 'TF'}, {country: 'Gabon', code: 'GA'}, {country: 'Gambia', code: 'GM'}, {country: 'Georgia', code: 'GE'}, {country: 'Germany', code: 'DE'}, {country: 'Ghana', code: 'GH'}, {country: 'Gibraltar', code: 'GI'}, {country: 'Greece', code: 'GR'}, {country: 'Greenland', code: 'GL'}, {country: 'Grenada', code: 'GD'}, {country: 'Guadeloupe', code: 'GP'}, {country: 'Guam', code: 'GU'}, {country: 'Guatemala', code: 'GT'}, {country: 'Guernsey', code: 'GG'}, {country: 'Guinea', code: 'GN'}, {country: 'Guinea-Bissau', code: 'GW'}, {country: 'Guyana', code: 'GY'}, {country: 'Haiti', code: 'HT'}, {country: 'Heard Island & Mcdonald Islands', code: 'HM'}, {country: 'Holy See (Vatican City State)', code: 'VA'}, {country: 'Honduras', code: 'HN'}, {country: 'Hong Kong', code: 'HK'}, {country: 'Hungary', code: 'HU'}, {country: 'Iceland', code: 'IS'}, {country: 'India', code: 'IN'}, {country: 'Indonesia', code: 'ID'}, {country: 'Iran, Islamic Republic Of', code: 'IR'}, {country: 'Iraq', code: 'IQ'}, {country: 'Ireland', code: 'IE'}, {country: 'Isle Of Man', code: 'IM'}, {country: 'Israel', code: 'IL'}, {country: 'Italy', code: 'IT'}, {country: 'Jamaica', code: 'JM'}, {country: 'Japan', code: 'JP'}, {country: 'Jersey', code: 'JE'}, {country: 'Jordan', code: 'JO'}, {country: 'Kazakhstan', code: 'KZ'}, {country: 'Kenya', code: 'KE'}, {country: 'Kiribati', code: 'KI'}, {country: 'Korea', code: 'KP'}, {country: 'Korea, Republic of', code: 'KR'}, {country: 'Kuwait', code: 'KW'}, {country: 'Kyrgyzstan', code: 'KG'}, {country: 'Lao People"S Democratic Republic', code: 'LA'}, {country: 'Latvia', code: 'LV'}, {country: 'Lebanon', code: 'LB'}, {country: 'Lesotho', code: 'LS'}, {country: 'Liberia', code: 'LR'}, {country: 'Libyan Arab Jamahiriya', code: 'LY'}, {country: 'Liechtenstein', code: 'LI'}, {country: 'Lithuania', code: 'LT'}, {country: 'Luxembourg', code: 'LU'}, {country: 'Macao', code: 'MO'}, {country: 'Macedonia, The Former Yugoslav Republic of', code: 'MK'}, {country: 'Madagascar', code: 'MG'}, {country: 'Malawi', code: 'MW'}, {country: 'Malaysia', code: 'MY'}, {country: 'Maldives', code: 'MV'}, {country: 'Mali', code: 'ML'}, {country: 'Malta', code: 'MT'}, {country: 'Marshall Islands', code: 'MH'}, {country: 'Martinique', code: 'MQ'}, {country: 'Mauritania', code: 'MR'}, {country: 'Mauritius', code: 'MU'}, {country: 'Mayotte', code: 'YT'}, {country: 'Mexico', code: 'MX'}, {country: 'Micronesia, Federated States of', code: 'FM'}, {country: 'Moldova', code: 'MD'}, {country: 'Monaco', code: 'MC'}, {country: 'Mongolia', code: 'MN'}, {country: 'Montenegro', code: 'ME'},{country: 'Montserrat', code: 'MS'},{country: 'Morocco', code: 'MA'}, {country: 'Mozambique', code: 'MZ'}, {country: 'Myanmar', code: 'MM'}, {country: 'Namibia', code: 'NA'}, {country: 'Nauru', code: 'NR'}, {country: 'Nepal', code: 'NP'}, {country: 'Netherlands', code: 'NL'}, {country: 'Netherlands Antilles', code: 'AN'}, {country: 'New Caledonia', code: 'NC'}, {country: 'New Zealand', code: 'NZ'}, {country: 'Nicaragua', code: 'NI'}, {country: 'Niger', code: 'NE'}, {country: 'Nigeria', code: 'NG'}, {country: 'Niue', code: 'NU'}, {country: 'Norfolk Island', code: 'NF'}, {country: 'Northern Mariana Islands', code: 'MP'}, {country: 'Norway', code: 'NO'}, {country: 'Oman', code: 'OM'}, {country: 'Pakistan', code: 'PK'}, {country: 'Palau', code: 'PW'}, {country: 'Palestinian Territory, Occupied', code: 'PS'}, {country: 'Panama', code: 'PA'}, {country: 'Papua New Guinea', code: 'PG'}, {country: 'Paraguay', code: 'PY'}, {country: 'Peru', code: 'PE'}, {country: 'Philippines', code: 'PH'}, {country: 'Pitcairn', code: 'PN'}, {country: 'Poland', code: 'PL'}, {country: 'Portugal', code: 'PT'}, {country: 'Puerto Rico', code: 'PR'}, {country: 'Qatar', code: 'QA'}, {country: 'Reunion', code: 'RE'}, {country: 'Romania', code: 'RO'}, {country: 'Russian Federation', code: 'RU'}, {country: 'Rwanda', code: 'RW'}, {country: 'Saint Helena', code: 'SH'}, {country: 'Saint Kitts And Nevis', code: 'KN'}, {country: 'Saint Lucia', code: 'LC'}, {country: 'Saint Pierre And Miquelon', code: 'PM'}, {country: 'Saint Vincent And Grenadines', code: 'VC'}, {country: 'Saint Martin', code: 'MF'}, {country: 'Samoa', code: 'WS'}, {country: 'San Marino', code: 'SM'}, {country: 'Sao Tome And Principe', code: 'ST'}, {country: 'Saudi Arabia', code: 'SA'}, {country: 'Senegal', code: 'SN'}, {country: 'Serbia', code: 'RS'}, {country: 'Seychelles', code: 'SC'}, {country: 'Sierra Leone', code: 'SL'}, {country: 'Singapore', code: 'SG'}, {country: 'Slovakia', code: 'SK'}, {country: 'Slovenia', code: 'SI'}, {country: 'Solomon Islands', code: 'SB'}, {country: 'Somalia', code: 'SO'}, {country: 'South Africa', code: 'ZA'}, {country: 'South Georgia And Sandwich Islands', code: 'GS'}, {country: 'Spain', code: 'ES'}, {country: 'Sri Lanka', code: 'LK'}, {country: 'Sudan', code: 'SD'}, {country: 'Suriname', code: 'SR'}, {country: 'Svalbard And Jan Mayen', code: 'SJ'}, {country: 'Swaziland', code: 'SZ'}, {country: 'Sweden', code: 'SE'}, {country: 'Switzerland', code: 'CH'}, {country: 'Syrian Arab Republic', code: 'SY'}, {country: 'Taiwan', code: 'TW'}, {country: 'Tajikistan', code: 'TJ'}, {country: 'Tanzania', code: 'TZ'}, {country: 'Thailand', code: 'TH'}, {country: 'Timor-Leste', code: 'TL'}, {country: 'Togo', code: 'TG'}, {country: 'Tokelau', code: 'TK'}, {country: 'Tonga', code: 'TO'}, {country: 'Trinidad And Tobago', code: 'TT'}, {country: 'Tunisia', code: 'TN'}, {country: 'Turkey', code: 'TR'}, {country: 'Turkmenistan', code: 'TM'}, {country: 'Turks And Caicos Islands', code: 'TC'}, {country: 'Tuvalu', code: 'TV'}, {country: 'Uganda', code: 'UG'}, {country: 'Ukraine', code: 'UA'}, {country: 'United Arab Emirates', code: 'AE'}, {country: 'United Kingdom', code: 'GB'}, {country: 'United States', code: 'US'}, {country: 'United States Outlying Islands', code: 'UM'}, {country: 'Uruguay', code: 'UY'}, {country: 'Uzbekistan', code: 'UZ'}, {country: 'Vanuatu', code: 'VU'}, {country: 'Venezuela', code: 'VE'}, {country: 'Viet Nam', code: 'VN'}, {country: 'Virgin Islands, British', code: 'VG'}, {country: 'Virgin Islands, U.S.', code: 'VI'}, {country: 'Wallis And Futuna', code: 'WF'}, {country: 'Western Sahara', code: 'EH'}, {country: 'Yemen', code: 'YE'}, {country: 'Zambia', code: 'ZM'}, {country: 'Zimbabwe', code: 'ZW'}   ]

  dataset = Object.keys(sb_countries).find(x => sb_countries[x].code === user_country_code);
  user_country_name  = sb_countries[dataset].country;
  dataset = Object.keys(sb_countries).find(x => sb_countries[x].code === store_country_code);
  store_country_name  = sb_countries[dataset].country;
  
  edd_data =[{store_id : edd_options.store_id,
        plan : edd_options.plan_info.plan,
        store_country_name : store_country_name,
        store_country_code : store_country_code,
        user_country_name : user_country_name,
        user_country_code : user_country_code,
        allowed_store : edd_options.allow_store,
        trial_store : '0',
        plan_active : '1' ,
        is_install : '1'
  }];

  //console.log(' store_country_name '+store_country_name +' store_country_code '+store_country_code)
  //console.log(' user_country_name '+user_country_name +' user_country_code '+user_country_code)
 
  setEDDCookie("edd_data", JSON.stringify(edd_data));
  var check_edd_data = getEDDCookie("edd_data");
  check_edd_data = JSON.parse(check_edd_data);
  if(typeof check_edd_data[0] != 'undefined'){
    check_edd_data = check_edd_data[0]
  }
  setEDDCountry(check_edd_data);
 
}
function setEDDCountry(check_edd_data){
 edd_store_country_name = check_edd_data.store_country_name;
 edd_store_country_code = check_edd_data.store_country_code;
 edd_user_country_name = check_edd_data.user_country_name;
 edd_user_country_code = check_edd_data.user_country_code;
 //edd_app_plan = edd_plan_info.plan;  /* 06-10-2022 */
 edd_app_plan = check_edd_data.plan;
 edd_store_id = check_edd_data.store_id;
 edd_trial_store = check_edd_data.trial_store;
 edd_allowed_store = check_edd_data.allowed_store;
 // console.log('edd_store_country '+edd_store_country_name)
 // console.log('edd_store_country_code '+edd_store_country_code)
 // console.log('edd_user_country '+edd_user_country_name)
 // console.log('edd_user_country_code '+edd_user_country_code)
 // console.log('edd_app_plan '+edd_app_plan)
 //  console.log('edd_store_id '+edd_store_id)
  
  if(edd_store_id > 2614 || edd_shop == 'purrfetto.myshopify.com' ||  edd_shop == 'estimated-delivery-date-time.myshopify.com'){
     <!-- check product quantity  -->
    console.log('Qty => based on product qty')
    if(edd_product_qty > 0){product_have_qty = 1;}
  }else{
     <!-- check product avaiable  -->
       console.log('Qty => based on product avaiable')
    if(product_avaiable == 'true'){product_have_qty = 1;}
  }

  //getSpecificEDDMsg();

  var is_vaction_msg_on = 'false';
  if(typeof edd_options.is_vaction_msg_on != 'undefined'){
    is_vaction_msg_on = edd_options.is_vaction_msg_on;
  }

  if(is_vaction_msg_on == 'true' && typeof edd_options.vacation_message != 'undefined' && typeof edd_options.schedule_date != 'undefined' && typeof edd_options.schedule_end_date != 'undefined'){
      vacation_message = edd_options.vacation_message; 
      schedule_date = edd_options.schedule_date; 
      schedule_end_date = edd_options.schedule_end_date; 
     
     
      if((new Date() > new Date(schedule_date)) && (new Date() < new Date(schedule_end_date)) ){
        //console.log('=> set vacation_message')
        set_vaction_msg = '1';
        is_rule_set_for_location = '0';
         edd_preview_design = {"animation_class":"no_effect","preview_design":"set","highlight_color":"not_set","color":"#000","border":"transparent","font_size":"16","text_align":"unset","text_transform":"unset","font_weight":"unset","font_style":"unset","background_option":"color","background":"transparent","margin":"0px 0px 0px 0px ","padding":"10px 10px 10px 10px ","border_radius":"0px "};
      }
      
    }

  if(set_vaction_msg == '1'){
      if(typeof edd_exclude_product != 'undefined' && edd_exclude_product != 'not_set' && edd_exclude_product.filter(e => e.check_rule_for  == edd_product_id).length > 0){
        is_exclude_product = '1';
        //console.log('=> exclude product');
      }else{
      edd_message = edd_options.vacation_message;
      set_specific_msg = 1;
      }
    }else{
      getSpecificEDDMsg();
    }

  if(set_specific_msg == 1){
      edd_country_name = edd_user_country_name;
      edd_country_code = edd_user_country_code;
    }else{
      edd_country_name = edd_store_country_name;
      edd_country_code = edd_store_country_code;
    }
  
  //console.log('product_avaiable '+product_avaiable+' product_have_qty '+product_have_qty)
  
  
}
  
/* changelog */
  function checkUserCountry($){
    //console.log('=> get user country ajax ')
   $.ajax({
           url: "//estimated-delivery-days.setubridgeapps.com/estimated-delivery-days/app/src/public/checkEDDPayment",
           data : {shop:edd_shop},
           type:"POST",
           success: function(response){ 
             edd_data = response;
             check_edd_data = JSON.parse(edd_data);
             
             //console.log(typeof(edd_data))
             
             //console.log(edd_data)
             setEDDCountry(check_edd_data);

             checkEddDataInterval = setInterval(function(){
                var check_edd_data = getEDDCookie("edd_data");
 
                if (check_edd_data == ""){
                 setEDDCookie("edd_data", edd_data);
                 clearInterval(checkEddDataInterval);
                }

             },700);
             
             
             
             
           }
         })
  }
/* changelog */


var loadScriptInLiquidData = function (url, callback) {
    var script = document.createElement('script');
    script.type = 'text/javascript';
    if (script.readyState) {
      script.onreadystatechange = function () {
        if (script.readyState == 'loaded' || script.readyState == 'complete') {
          script.onreadystatechange = null;
          callback();
        }
      };
    } else {
      script.onload = function () {
        callback();
      };
    }
    script.src = url;
    document.getElementsByTagName('head') [0].appendChild(script);
  };

  /* check Jquery loaded in theme or not */
  if((typeof jQuery === 'undefined') || (parseFloat(jQuery.fn.jquery) < 1.7)){
    //console.log(' ***** add jquery ******')
    loadScriptInLiquidData('//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js', function () {
      jQuery191 = jQuery.noConflict(true);
      checkEDDCookie(jQuery191);
    });

  }else{
    //console.log(' ***** jquery added ******')
    checkEDDCookie(jQuery);
  }

  function getSpecificEDDMsg(){

    /* hide the edd message for qty = 0 */
    if(edd_product_qty == 0 ){
      console.log('hide the edd message for inventory = 0')
     // is_exclude_product = '1';
    }
    /* hide the edd message for qty = 0 */
    
  //check exclude product
  if(typeof edd_exclude_product != 'undefined' && edd_exclude_product != 'not_set' && edd_exclude_product.filter(e => e.check_rule_for  == edd_product_id).length > 0){
    is_exclude_product = '1';
    console.log('=> exclude product')
  }
  
  else {
    // check edd message for product 
    if(typeof edd_specific_product_msg != 'undefined' && edd_specific_product_msg != 'not_set' && edd_specific_product_msg.filter(e => e.check_rule_for  == edd_product_id).length > 0){
      console.log('Specific Mesage type => Product ')
       setEddMessageFromLiquid(edd_specific_product_msg,edd_product_id,'product');
      //console.log('is_set_msg_for_product '+is_set_msg_for_product)
    }
  
     // check edd message for collection 
    if(set_specific_msg == 0 && typeof edd_collection_msg != 'undefined' && edd_collection_msg != 'not_set' ){
      console.log('Specific Mesage type => Collection ')
       //setEddMessageFromLiquid(edd_collection_msg,edd_collection_id)
       for(i=0; i<edd_collection_id.length; i++){
         setEddMessageFromLiquid(edd_collection_msg,edd_collection_id[i],'collection');
         if(is_set_msg_for_collection == '1'){
          break;
        }
        }
    }
   
     // check edd message for product vendor
    if(set_specific_msg == 0 && typeof edd_product_vendor_msg != 'undefined' && edd_product_vendor_msg != 'not_set'  && edd_product_vendor_msg.filter(e => e.check_rule_for  == edd_product_vendor).length > 0){
      console.log('Specific Mesage type => Product Vendor')
      setEddMessageFromLiquid(edd_product_vendor_msg,edd_product_vendor,'vendor')
    }
       
     // check edd message for product tag
     if(set_specific_msg == 0 && typeof edd_product_tag_msg != 'undefined' && edd_product_tag_msg != 'not_set'){
        console.log('Specific Mesage type => Product Tag')
       for(i=0; i<edd_product_tag.length; i++){
         setEddMessageFromLiquid(edd_product_tag_msg,edd_product_tag[i],'tag');
        if(is_set_msg_for_product_tag == '1'){
          break;
        }
       }        
      }

    // check edd message for All product 
    if(set_specific_msg == 0 && typeof edd_all_product_msg != 'undefined' && edd_all_product_msg != 'not_set'  && edd_all_product_msg.filter(e => e.check_rule_for  == 'all_product').length > 0){
        console.log('Specific Mesage type => All Product')
        setEddMessageFromLiquid(edd_all_product_msg,'all_product','all_product')
      }    
    }  
  }

  function setEddMessageFromLiquid(edd_msg_list,check_with,edd_rule_type){
    check_edd__in_out_stock_spe_c_with_shipping = edd_msg_list.filter(e => e.check_rule_for  == check_with && e.is_instock == product_have_qty && e.country_code == edd_user_country_code && e.additional_option == shipping_method_meta && e.is_enable == '1')  
    check_edd_both_edd_spe_c_with_shipping = edd_msg_list.filter(e => e.check_rule_for  == check_with && e.is_instock == 2 && e.country_code == edd_user_country_code && e.additional_option == shipping_method_meta && e.is_enable == '1') 
    check_edd__in_out_stock_all_c_with_shipping = edd_msg_list.filter(e => e.check_rule_for  == check_with && e.is_instock == product_have_qty && e.country_code == 'all_country' && e.additional_option == shipping_method_meta && e.is_enable == '1')  
    check_edd_both_edd_all_c_with_shipping = edd_msg_list.filter(e => e.check_rule_for  == check_with && e.is_instock == 2 && e.country_code == 'all_country' && e.additional_option == shipping_method_meta && e.is_enable == '1') 
    // console.log('check_edd__in_out_stock_spe_c_with_shipping')
    // console.log(check_edd__in_out_stock_spe_c_with_shipping)
    //  console.log('check_edd_both_edd_spe_c_with_shipping')
    // console.log(check_edd_both_edd_spe_c_with_shipping)
    //  console.log('check_edd__in_out_stock_all_c_with_shipping')
    // console.log(check_edd__in_out_stock_all_c_with_shipping)
    //  console.log('check_edd_both_edd_all_c_with_shipping')
    // console.log(check_edd_both_edd_all_c_with_shipping)
    
    // check_edd__in_out_stock_spe_c = edd_msg_list.filter(e => e.check_rule_for  == check_with && e.is_instock == product_have_qty && e.country_code == edd_user_country_code  && e.is_enable == '1')  
    // check_edd_both_edd_spe_c = edd_msg_list.filter(e => e.check_rule_for  == check_with && e.is_instock == 2 && e.country_code == edd_user_country_code  && e.is_enable == '1') 
    // check_edd__in_out_stock_all_c = edd_msg_list.filter(e => e.check_rule_for  == check_with && e.is_instock == product_have_qty && e.country_code == 'all_country'  && e.is_enable == '1')  
    // check_edd_both_edd_all_c = edd_msg_list.filter(e => e.check_rule_for  == check_with && e.is_instock == 2 && e.country_code == 'all_country'  && e.is_enable == '1') 

    if(check_edd__in_out_stock_spe_c_with_shipping.length > 0){
        if(typeof(check_edd__in_out_stock_spe_c_with_shipping[0].zipcode_enable) != "undefined"){
         if(check_edd__in_out_stock_spe_c_with_shipping[0].zipcode_enable == "1"){
             edd_zipcode_enable = check_edd__in_out_stock_spe_c_with_shipping[0].zipcode_enable;
             edd_zipcode_list = check_edd__in_out_stock_spe_c_with_shipping[0].zipcode_list;
         }
          
      }
      edd_preview_design = check_edd__in_out_stock_spe_c_with_shipping[0].preview_design;
      edd_message = check_edd__in_out_stock_spe_c_with_shipping[0].message;
      set_specific_msg = 1;
      set_shipping_method = 1;
      checkSpecificMsgFor(edd_rule_type);
      sb_edd_rule_list = check_edd__in_out_stock_spe_c_with_shipping;
      console.log('message => '+edd_message)
    }
    else if(check_edd_both_edd_spe_c_with_shipping.length > 0){
      if(typeof(check_edd_both_edd_spe_c_with_shipping[0].zipcode_enable) != "undefined"){
         if(check_edd_both_edd_spe_c_with_shipping[0].zipcode_enable == "1"){
            // console.log("(check_edd_both_edd_spe_c_with_shipping[0].zipcode_enable",check_edd_both_edd_spe_c_with_shipping[0].zipcode_enable)
           
             edd_zipcode_enable = check_edd_both_edd_spe_c_with_shipping[0].zipcode_enable;
             edd_zipcode_list = check_edd_both_edd_spe_c_with_shipping[0].zipcode_list;
           
         }
      }

      edd_preview_design = check_edd_both_edd_spe_c_with_shipping[0].preview_design;
      edd_message = check_edd_both_edd_spe_c_with_shipping[0].message;
      set_specific_msg = 1;
      set_shipping_method = 1;
      checkSpecificMsgFor(edd_rule_type);
     
      sb_edd_rule_list = check_edd_both_edd_spe_c_with_shipping;
      console.log('message => '+edd_message)
    }
    else if(check_edd__in_out_stock_all_c_with_shipping.length > 0){
        if(typeof(check_edd__in_out_stock_all_c_with_shipping[0].zipcode_enable) != "undefined"){
         if(check_edd__in_out_stock_all_c_with_shipping[0].zipcode_enable == "1"){
             edd_zipcode_enable = check_edd__in_out_stock_all_c_with_shipping[0].zipcode_enable;
             edd_zipcode_list = check_edd__in_out_stock_all_c_with_shipping[0].zipcode_list;
         }
      }
      edd_preview_design = check_edd__in_out_stock_all_c_with_shipping[0].preview_design;
      edd_message = check_edd__in_out_stock_all_c_with_shipping[0].message;
      set_specific_msg = 1;
      set_shipping_method = 1;
      checkSpecificMsgFor(edd_rule_type);
      sb_edd_rule_list = check_edd__in_out_stock_all_c_with_shipping;
      console.log('message => '+edd_message)
    }
    else if(check_edd_both_edd_all_c_with_shipping.length > 0){
       if(typeof(check_edd_both_edd_all_c_with_shipping[0].zipcode_enable) != "undefined"){
         if(check_edd_both_edd_all_c_with_shipping[0].zipcode_enable == "1"){
             edd_zipcode_enable = check_edd_both_edd_all_c_with_shipping[0].zipcode_enable;
             edd_zipcode_list = check_edd_both_edd_all_c_with_shipping[0].zipcode_list;
         }
      }
      edd_preview_design = check_edd_both_edd_all_c_with_shipping[0].preview_design;
      edd_message = check_edd_both_edd_all_c_with_shipping[0].message;
      set_specific_msg = 1;
      set_shipping_method = 1;
      checkSpecificMsgFor(edd_rule_type);
      console.log('message => '+edd_message)
      //console.log('edd_preview_design => '+edd_preview_design)
      sb_edd_rule_list = check_edd_both_edd_all_c_with_shipping;
    } 
  
  }

   function checkSpecificMsgFor(edd_rule_type){
    if(edd_rule_type == 'product'){
      is_set_msg_for_product = '1';
    }
    if(edd_rule_type == 'collection'){
      is_set_msg_for_collection = '1';
    }
    if(edd_rule_type == 'tag'){
      is_set_msg_for_product_tag = '1';
    }
    if(edd_rule_type == 'vendor'){
      is_set_msg_for_product_vendor = '1';
    }
    if(edd_rule_type == 'all_product'){
      is_set_msg_for_all_product = '1';
    }
  }
</script>